<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.access.mapper.AccessLogsMapper" >
    <insert id="addAccess">
        insert into p_access_logs
          ( system_info, system_group, system_type,browser_version,browser_name,browser_group,ip,`date`) VALUES
          (#{systemInfo},#{systemGroup}, #{systemType},#{browserVersion},#{browserName},#{browserGroup},
          #{ip},#{date})
    </insert>

    <update id="createTableForMysql">
         CREATE TABLE `p_access_logs`  (
              `id` bigint NOT NULL AUTO_INCREMENT COMMENT '主键',
              `system_info` varchar(64) NULL COMMENT '系统信息',
              `system_group` varchar(64) NULL COMMENT '系统家族',
               `system_type` varchar(64) NULL COMMENT '系统类型',
              `browser_version` varchar(64) NULL COMMENT '浏览器版本',
              `browser_name` varchar(64) NULL COMMENT '浏览器名称',
              `browser_group` varchar(64) NULL COMMENT '浏览器家族',
              `ip` varchar(64) NULL COMMENT 'ip',
              `date` datetime NULL COMMENT '时间',
              PRIMARY KEY (`id`)
            )
    </update>

    <update id="createTableForSqlite">
         CREATE TABLE `p_access_logs`  (
               "id" integer NOT NULL PRIMARY KEY AUTOINCREMENT,
                "system_info" text(64),
                `system_group` text(64),
               `system_type` text(64),
                "browser_version" text(64),
                "browser_name" text(64),
                  `browser_group` text(64),
                "ip" text(64),
                "date" DATETIME
            )
    </update>

    <update id="dropTable">
        drop table if exists `p_access_logs`
    </update>
    <select id="getAccessCountByWeek" resultType="map">
        SELECT
            *
        FROM
            (
            SELECT
                count( 1 ) `count`,
                strftime( '%m月%d日', datetime( 'now' ) ) `date`
            FROM
                "p_access_logs" p
            WHERE
                strftime( '%Y年%m月%d日', datetime( p.date / 1000, 'unixepoch', 'localtime' ) ) = strftime( '%Y年%m月%d日', datetime( 'now' ) ) UNION ALL
            SELECT
                count( 1 ) `count`,
                strftime( '%m月%d日', datetime( 'now', '-1 day' ) ) `date`
            FROM
                "p_access_logs" p
            WHERE
                strftime( '%Y年%m月%d日', datetime( p.date / 1000, 'unixepoch', 'localtime' ) ) = strftime( '%Y年%m月%d日', datetime( 'now', '-1 day' ) ) UNION ALL
            SELECT
                count( 1 ) `count`,
                strftime( '%m月%d日', datetime( 'now', '-2 day' ) ) `date`
            FROM
                "p_access_logs" p
            WHERE
                strftime( '%Y年%m月%d日', datetime( p.date / 1000, 'unixepoch', 'localtime' ) ) = strftime( '%Y年%m月%d日', datetime( 'now', '-2 day' ) ) UNION ALL
            SELECT
                count( 1 ) `count`,
                strftime( '%m月%d日', datetime( 'now', '-3 day' ) ) `date`
            FROM
                "p_access_logs" p
            WHERE
                strftime( '%Y年%m月%d日', datetime( p.date / 1000, 'unixepoch', 'localtime' ) ) = strftime( '%Y年%m月%d日', datetime( 'now', '-3 day' ) ) UNION ALL
            SELECT
                count( 1 ) `count`,
                strftime( '%m月%d日', datetime( 'now', '-4 day' ) ) `date`
            FROM
                "p_access_logs" p
            WHERE
                strftime( '%Y年%m月%d日', datetime( p.date / 1000, 'unixepoch', 'localtime' ) ) = strftime( '%Y年%m月%d日', datetime( 'now', '-4 day' ) ) UNION ALL
            SELECT
                count( 1 ) `count`,
                strftime( '%m月%d日', datetime( 'now', '-5 day' ) ) `date`
            FROM
                "p_access_logs" p
            WHERE
                strftime( '%Y年%m月%d日', datetime( p.date / 1000, 'unixepoch', 'localtime' ) ) = strftime( '%Y年%m月%d日', datetime( 'now', '-5 day' ) ) UNION ALL
            SELECT
                count( 1 ) `count`,
                strftime( '%m月%d日', datetime( 'now', '-6 day' ) ) `date`
            FROM
                "p_access_logs" p
            WHERE
                strftime( '%Y年%m月%d日', datetime( p.date / 1000, 'unixepoch', 'localtime' ) ) = strftime( '%Y年%m月%d日', datetime( 'now', '-6 day' ) )
            )
        ORDER BY
            `date` asc
    </select>

    <select id="getAccessCountBySysGroup" resultType="map">
        SELECT p.system_group `name`, count(1) `value` FROM p_access_logs p GROUP BY p.system_group
    </select>

    <select id="getList" resultType="com.access.model.AccessLogs">
        select id,system_info systemInfo,system_group systemGroup,system_type systemType,browser_version browserVersion,
        browser_name browserName,browser_group browserGroup,ip,date from p_access_logs limit #{page},#{size}
    </select>

    <select id="getTotal" resultType="long">
        select count(1) from p_access_logs
    </select>
</mapper>
